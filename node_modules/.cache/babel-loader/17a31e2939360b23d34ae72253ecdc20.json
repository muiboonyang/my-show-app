{"ast":null,"code":"var _jsxFileName = \"/Users/ernest/Desktop/sei-personal/5. projects/project2/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Carousell from \"../components/Carousell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [shows, setShows] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const url = \"https://imdb-api.com/en/API/ComingSoon/k_m0k14ib7\";\n\n  const fetchShow = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url);\n      const rawData = await res.json();\n      console.log(rawData); // ===============================\n      // Extract name and medium image from fetch result, set a placeholder image for shows without pics (otherwise will show broken image link)\n      // <Reference from source code>\n      //\n      // a5 = 'Cat' && 'Dog'       // t && t returns \"Dog\"\n      // a2 = true && false;       // t && f returns false\n      // o5 = \"Cat\" || \"Dog\";      // t || t returns \"Cat\"\n      // o6 = false || \"Cat\";      // f || t returns \"Cat\"\n      // ===============================\n\n      const filteredData = rawData.map(result => {\n        const {\n          fullTitle,\n          image,\n          plot\n        } = result.show;\n        return {\n          fullTitle,\n          image: image && image.medium || \"https://i.imgur.com/V8olf7q.png\",\n          plot: plot || \"Coming soon!\"\n        };\n      });\n      setShows(filteredData);\n      console.log(shows);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchShow();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to my Movie / TV Search App!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousell, {\n      shows: shows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"UOpNVh0hytd+z2P5xxvKcPBLnKI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ernest/Desktop/sei-personal/5. projects/project2/src/pages/Home.js"],"names":["React","useState","useEffect","Carousell","Home","shows","setShows","hasSearched","setHasSearched","isLoading","setIsLoading","error","setError","url","fetchShow","res","fetch","rawData","json","console","log","filteredData","map","result","fullTitle","image","plot","show","medium","err","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMY,GAAG,GAAG,mDAAZ;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAC5BJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AACF,YAAMG,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAvB;AACA,YAAMI,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAHE,CAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAMI,YAAY,GAAGJ,OAAO,CAACK,GAAR,CAAaC,MAAD,IAAY;AAC3C,cAAM;AAAEC,UAAAA,SAAF;AAAaC,UAAAA,KAAb;AAAoBC,UAAAA;AAApB,YAA6BH,MAAM,CAACI,IAA1C;AACA,eAAO;AACLH,UAAAA,SADK;AAELC,UAAAA,KAAK,EAAGA,KAAK,IAAIA,KAAK,CAACG,MAAhB,IAA2B,iCAF7B;AAGLF,UAAAA,IAAI,EAAEA,IAAI,IAAI;AAHT,SAAP;AAKD,OAPoB,CAArB;AASApB,MAAAA,QAAQ,CAACe,YAAD,CAAR;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACD,KA1BD,CA0BE,OAAOwB,GAAP,EAAY;AACZjB,MAAAA,QAAQ,CAACiB,GAAG,CAACC,OAAL,CAAR;AACD;;AAEDpB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAnCD;;AAqCAR,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAET;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAvDD;;GAAMD,I;;KAAAA,I;AAyDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Carousell from \"../components/Carousell\";\n\nconst Home = () => {\n  const [shows, setShows] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const url = \"https://imdb-api.com/en/API/ComingSoon/k_m0k14ib7\";\n\n  const fetchShow = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url);\n      const rawData = await res.json();\n      console.log(rawData);\n\n      // ===============================\n      // Extract name and medium image from fetch result, set a placeholder image for shows without pics (otherwise will show broken image link)\n      // <Reference from source code>\n      //\n      // a5 = 'Cat' && 'Dog'       // t && t returns \"Dog\"\n      // a2 = true && false;       // t && f returns false\n      // o5 = \"Cat\" || \"Dog\";      // t || t returns \"Cat\"\n      // o6 = false || \"Cat\";      // f || t returns \"Cat\"\n      // ===============================\n\n      const filteredData = rawData.map((result) => {\n        const { fullTitle, image, plot } = result.show;\n        return {\n          fullTitle,\n          image: (image && image.medium) || \"https://i.imgur.com/V8olf7q.png\",\n          plot: plot || \"Coming soon!\",\n        };\n      });\n\n      setShows(filteredData);\n      console.log(shows);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchShow();\n  }, []);\n\n  return (\n    <>\n      <h1>Welcome to my Movie / TV Search App!</h1>\n      <Carousell shows={shows} />\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}