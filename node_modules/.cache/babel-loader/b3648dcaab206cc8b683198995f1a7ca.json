{"ast":null,"code":"var _jsxFileName = \"/Users/ernest/Desktop/sei-personal/5. projects/project2/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Carousell from \"../components/Carousell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [shows, setShows] = useState([]);\n  const url = \"https://imdb-api.com/en/API/ComingSoon/k_m0k14ib7\";\n\n  const fetchShow = async () => {\n    const res = await fetch(url);\n    const rawData = await res.json();\n    console.log(rawData.items); // ===============================\n    // Extract name and medium image from fetch result, set a placeholder image for shows without pics (otherwise will show broken image link)\n    // <Reference from source code>\n    //\n    // a5 = 'Cat' && 'Dog'       // t && t returns \"Dog\"\n    // a2 = true && false;       // t && f returns false\n    // o5 = \"Cat\" || \"Dog\";      // t || t returns \"Cat\"\n    // o6 = false || \"Cat\";      // f || t returns \"Cat\"\n    // ===============================\n\n    const filteredData = rawData.items.map(result => {\n      const {\n        title,\n        fullTitle,\n        image,\n        plot,\n        releaseState\n      } = result;\n      return {\n        title,\n        fullTitle,\n        image,\n        plot,\n        releaseState\n      };\n    });\n    setShows(filteredData);\n    console.log(shows);\n  };\n\n  useEffect(() => {\n    fetchShow();\n  }, [setShows]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to my Movie / TV Search App!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousell, {\n      shows: shows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"lt4sKoljhgDY9nzMRkpzzWWHEHs=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ernest/Desktop/sei-personal/5. projects/project2/src/pages/Home.js"],"names":["React","useState","useEffect","Carousell","Home","shows","setShows","url","fetchShow","res","fetch","rawData","json","console","log","items","filteredData","map","result","title","fullTitle","image","plot","releaseState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMM,GAAG,GAAG,mDAAZ;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAvB;AACA,UAAMI,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,KAApB,EAH4B,CAK5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMC,YAAY,GAAGL,OAAO,CAACI,KAAR,CAAcE,GAAd,CAAmBC,MAAD,IAAY;AACjD,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,SAAT;AAAoBC,QAAAA,KAApB;AAA2BC,QAAAA,IAA3B;AAAiCC,QAAAA;AAAjC,UAAkDL,MAAxD;AACA,aAAO;AACLC,QAAAA,KADK;AAELC,QAAAA,SAFK;AAGLC,QAAAA,KAHK;AAILC,QAAAA,IAJK;AAKLC,QAAAA;AALK,OAAP;AAOD,KAToB,CAArB;AAWAjB,IAAAA,QAAQ,CAACU,YAAD,CAAR;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,GA5BD;;AA8BAH,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CA9CD;;GAAMD,I;;KAAAA,I;AAgDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Carousell from \"../components/Carousell\";\n\nconst Home = () => {\n  const [shows, setShows] = useState([]);\n\n  const url = \"https://imdb-api.com/en/API/ComingSoon/k_m0k14ib7\";\n\n  const fetchShow = async () => {\n    const res = await fetch(url);\n    const rawData = await res.json();\n    console.log(rawData.items);\n\n    // ===============================\n    // Extract name and medium image from fetch result, set a placeholder image for shows without pics (otherwise will show broken image link)\n    // <Reference from source code>\n    //\n    // a5 = 'Cat' && 'Dog'       // t && t returns \"Dog\"\n    // a2 = true && false;       // t && f returns false\n    // o5 = \"Cat\" || \"Dog\";      // t || t returns \"Cat\"\n    // o6 = false || \"Cat\";      // f || t returns \"Cat\"\n    // ===============================\n\n    const filteredData = rawData.items.map((result) => {\n      const { title, fullTitle, image, plot, releaseState } = result;\n      return {\n        title,\n        fullTitle,\n        image,\n        plot,\n        releaseState,\n      };\n    });\n\n    setShows(filteredData);\n    console.log(shows);\n  };\n\n  useEffect(() => {\n    fetchShow();\n  }, [setShows]);\n\n  return (\n    <>\n      <h1>Welcome to my Movie / TV Search App!</h1>\n      <br />\n      <Carousell shows={shows} />\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}