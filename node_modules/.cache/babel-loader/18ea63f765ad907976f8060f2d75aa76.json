{"ast":null,"code":"var _jsxFileName = \"/Users/ernest/Desktop/sei-personal/5. projects/project2/src/pages/Favourites.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Results from \"../components/Results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Favourites = () => {\n  _s();\n\n  // Favourite List\n  const [favourites, setFavourites] = useState([]);\n\n  const addFav = e => {\n    setFavourites(prevState => {\n      const newShow = document.getElementById(e.target.id);\n      prevState.push(newShow.src);\n      const deduped = [...new Set(prevState)]; // const deduped = Array.from(new Set(prevState));\n\n      const favArray = deduped.map(data => {\n        return data;\n      });\n      console.log(deduped);\n      return favArray;\n    });\n  }; // Code to remove shows from Favourite List\n  // gets image's ID based on clicked image -> use splice to remove it from Favourite List\n\n\n  const removeFav = e => {\n    setFavourites(prevState => {\n      const targetId = e.target.parentElement.id;\n      prevState.splice(targetId, 1);\n      const favArray = prevState.map(data => {\n        return data;\n      });\n      return favArray;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Favourites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Favourites, {\n      favourites: favourites,\n      removeFav: removeFav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      addFav: addFav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Favourites, \"yqnmRAiIiqRtLBg6+KCLw1XAHCQ=\");\n\n_c = Favourites;\nexport default Favourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"sources":["/Users/ernest/Desktop/sei-personal/5. projects/project2/src/pages/Favourites.js"],"names":["React","useState","Results","Favourites","favourites","setFavourites","addFav","e","prevState","newShow","document","getElementById","target","id","push","src","deduped","Set","favArray","map","data","console","log","removeFav","targetId","parentElement","splice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMK,MAAM,GAAIC,CAAD,IAAO;AACpBF,IAAAA,aAAa,CAAEG,SAAD,IAAe;AAC3B,YAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,CAAC,CAACK,MAAF,CAASC,EAAjC,CAAhB;AACAL,MAAAA,SAAS,CAACM,IAAV,CAAeL,OAAO,CAACM,GAAvB;AAEA,YAAMC,OAAO,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQT,SAAR,CAAJ,CAAhB,CAJ2B,CAK3B;;AAEA,YAAMU,QAAQ,GAAGF,OAAO,CAACG,GAAR,CAAaC,IAAD,IAAU;AACrC,eAAOA,IAAP;AACD,OAFgB,CAAjB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACA,aAAOE,QAAP;AACD,KAZY,CAAb;AAaD,GAdD,CALuB,CAqBvB;AACA;;;AACA,QAAMK,SAAS,GAAIhB,CAAD,IAAO;AACvBF,IAAAA,aAAa,CAAEG,SAAD,IAAe;AAC3B,YAAMgB,QAAQ,GAAGjB,CAAC,CAACK,MAAF,CAASa,aAAT,CAAuBZ,EAAxC;AACAL,MAAAA,SAAS,CAACkB,MAAV,CAAiBF,QAAjB,EAA2B,CAA3B;AACA,YAAMN,QAAQ,GAAGV,SAAS,CAACW,GAAV,CAAeC,IAAD,IAAU;AACvC,eAAOA,IAAP;AACD,OAFgB,CAAjB;AAGA,aAAOF,QAAP;AACD,KAPY,CAAb;AAQD,GATD;;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEd,UAAxB;AAAoC,MAAA,SAAS,EAAEmB;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEjB;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CAzCD;;GAAMH,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Results from \"../components/Results\";\n\nconst Favourites = () => {\n  // Favourite List\n\n  const [favourites, setFavourites] = useState([]);\n\n  const addFav = (e) => {\n    setFavourites((prevState) => {\n      const newShow = document.getElementById(e.target.id);\n      prevState.push(newShow.src);\n\n      const deduped = [...new Set(prevState)];\n      // const deduped = Array.from(new Set(prevState));\n\n      const favArray = deduped.map((data) => {\n        return data;\n      });\n      console.log(deduped);\n      return favArray;\n    });\n  };\n\n  // Code to remove shows from Favourite List\n  // gets image's ID based on clicked image -> use splice to remove it from Favourite List\n  const removeFav = (e) => {\n    setFavourites((prevState) => {\n      const targetId = e.target.parentElement.id;\n      prevState.splice(targetId, 1);\n      const favArray = prevState.map((data) => {\n        return data;\n      });\n      return favArray;\n    });\n  };\n\n  return (\n    <>\n      <h1>Favourites</h1>\n      <Favourites favourites={favourites} removeFav={removeFav} />\n      <Results addFav={addFav} />\n    </>\n  );\n};\n\nexport default Favourites;\n"]},"metadata":{},"sourceType":"module"}