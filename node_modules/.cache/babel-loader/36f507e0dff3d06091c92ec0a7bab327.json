{"ast":null,"code":"var _jsxFileName = \"/Users/ernest/Desktop/sei-personal/5. projects/project2/src/pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Input from \"../components/Input\";\nimport Results from \"../components/Results\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport FavList from \"../components/FavList\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchContainer = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [shows, setShows] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); // ====================================\n  // Fetch shows from API based on query input\n  // ====================================\n\n  const url = \"https://api.tvmaze.com/search/shows?q=\";\n\n  const fetchShow = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url + query);\n      const rawData = await res.json();\n      console.log(rawData); // ===============================\n      // Extract name and medium image from fetch result\n      // - set a placeholder image for shows without pics (otherwise will show broken image link)\n      // - removes HTML element tags from show description\n      //\n      // a5 = 'Cat' && 'Dog'       // t && t returns \"Dog\"\n      // a2 = true && false;       // t && f returns false\n      // o5 = \"Cat\" || \"Dog\";      // t || t returns \"Cat\"\n      // o6 = false || \"Cat\";      // f || t returns \"Cat\"\n      // ===============================\n\n      const filteredData = rawData.map(result => {\n        let {\n          name,\n          image,\n          officialSite,\n          url,\n          summary\n        } = result.show;\n        return {\n          title: name,\n          image: image && image.medium || \"https://i.imgur.com/V8olf7q.png\",\n          site: officialSite || url,\n          synopsis: (summary || \"Coming soon!\").replace(/<\\/?[^>]+>/gi, \"\")\n        };\n      });\n      setShows(filteredData);\n      console.log(shows);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  }; // ===========================\n  // 2 Functions to:\n  // - handleSearchInput: manage changes to input field\n  // - onSubmitQuery: initiate fetch request\n  // ===========================\n\n\n  const handleSearchInput = e => {\n    setQuery(e.target.value);\n  };\n\n  const onSubmitQuery = e => {\n    e.preventDefault();\n\n    if (query.length > 0) {\n      fetchShow();\n      setHasSearched(true); //   setQuery(\"\");\n    }\n  }; // ===========================\n  // Image, Error, or Loading check\n  // ===========================\n\n\n  let content = \"\";\n\n  if (shows) {\n    content = /*#__PURE__*/_jsxDEV(Results, {\n      shows: shows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  } // =========================\n  // Return\n  // - Using ternary operator + hasSearched state to display either component\n  // - hasSearched = false -> show page with Search bar / true -> show page with Results + \"back to search\" button)\n  // =========================\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"profile\",\n        id: \"uncontrolled-tab-example\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"home\",\n          title: \"Home\",\n          children: \"Test1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"profile\",\n          title: \"Profile\",\n          children: \"Test 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        handleSearchInput: handleSearchInput,\n        onSubmitQuery: onSubmitQuery,\n        query: query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), hasSearched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FavList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), content]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SearchContainer, \"M1J7dZHlnIGRpJJ8+nICS5tOY5E=\");\n\n_c = SearchContainer;\nexport default SearchContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchContainer\");","map":{"version":3,"sources":["/Users/ernest/Desktop/sei-personal/5. projects/project2/src/pages/Search.js"],"names":["React","useState","Input","Results","LoadingSpinner","FavList","Tabs","Tab","SearchContainer","query","setQuery","shows","setShows","hasSearched","setHasSearched","isLoading","setIsLoading","error","setError","url","fetchShow","res","fetch","rawData","json","console","log","filteredData","map","result","name","image","officialSite","summary","show","title","medium","site","synopsis","replace","err","message","handleSearchInput","e","target","value","onSubmitQuery","preventDefault","length","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"../components/Input\";\nimport Results from \"../components/Results\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport FavList from \"../components/FavList\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n\nconst SearchContainer = () => {\n  const [query, setQuery] = useState(\"\");\n  const [shows, setShows] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // ====================================\n  // Fetch shows from API based on query input\n  // ====================================\n\n  const url = \"https://api.tvmaze.com/search/shows?q=\";\n\n  const fetchShow = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url + query);\n      const rawData = await res.json();\n      console.log(rawData);\n\n      // ===============================\n      // Extract name and medium image from fetch result\n      // - set a placeholder image for shows without pics (otherwise will show broken image link)\n      // - removes HTML element tags from show description\n      //\n      // a5 = 'Cat' && 'Dog'       // t && t returns \"Dog\"\n      // a2 = true && false;       // t && f returns false\n      // o5 = \"Cat\" || \"Dog\";      // t || t returns \"Cat\"\n      // o6 = false || \"Cat\";      // f || t returns \"Cat\"\n      // ===============================\n\n      const filteredData = rawData.map((result) => {\n        let { name, image, officialSite, url, summary } = result.show;\n        return {\n          title: name,\n          image: (image && image.medium) || \"https://i.imgur.com/V8olf7q.png\",\n          site: officialSite || url,\n          synopsis: (summary || \"Coming soon!\").replace(/<\\/?[^>]+>/gi, \"\"),\n        };\n      });\n\n      setShows(filteredData);\n      console.log(shows);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  // ===========================\n  // 2 Functions to:\n  // - handleSearchInput: manage changes to input field\n  // - onSubmitQuery: initiate fetch request\n  // ===========================\n\n  const handleSearchInput = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const onSubmitQuery = (e) => {\n    e.preventDefault();\n    if (query.length > 0) {\n      fetchShow();\n      setHasSearched(true);\n      //   setQuery(\"\");\n    }\n  };\n\n  // ===========================\n  // Image, Error, or Loading check\n  // ===========================\n\n  let content = \"\";\n\n  if (shows) {\n    content = <Results shows={shows} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  // =========================\n  // Return\n  // - Using ternary operator + hasSearched state to display either component\n  // - hasSearched = false -> show page with Search bar / true -> show page with Results + \"back to search\" button)\n  // =========================\n\n  return (\n    <>\n      <div className=\"SearchContainer\">\n        <Tabs\n          defaultActiveKey=\"profile\"\n          id=\"uncontrolled-tab-example\"\n          className=\"mb-3\"\n        >\n          <Tab eventKey=\"home\" title=\"Home\">\n            Test1\n          </Tab>\n          <Tab eventKey=\"profile\" title=\"Profile\">\n            Test 2\n          </Tab>\n        </Tabs>\n\n        <Input\n          handleSearchInput={handleSearchInput}\n          onSubmitQuery={onSubmitQuery}\n          query={query}\n        />\n        <br />\n        {hasSearched ? (\n          <>\n            <FavList />\n            <br />\n            {content}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SearchContainer;\n"]},"metadata":{},"sourceType":"module"}