{"ast":null,"code":"var _jsxFileName = \"/Users/ernest/Desktop/sei-personal/5. projects/project2/src/components/Results.js\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Favourites from \"./Favourites\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\"; // import ListGroup from \"react-bootstrap/ListGroup\";\n// import ListGroupItem from \"react-bootstrap/ListGroupItem\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Results = props => {\n  // Favourite List\n  var favorites = JSON.parse(localStorage.getItem(\"favorites\")) || []; // add class 'fav' to each favorite\n\n  favorites.forEach(function (favorite) {\n    document.getElementById(favorite).className = \"fav\";\n  }); // register click event listener\n\n  document.querySelector(\".cards\").addEventListener(\"click\", function (e) {\n    var id = e.target.id,\n        item = e.target,\n        index = favorites.indexOf(id); // return if target doesn't have an id (shouldn't happen)\n\n    if (!id) return; // item is not favorite\n\n    if (index == -1) {\n      favorites.push(id);\n      item.className = \"fav\"; // item is already favorite\n    } else {\n      favorites.splice(index, 1);\n      item.className = \"\";\n    } // store array in local storage\n\n\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }); // Code to add shows to Favourite List\n  // changes to current state\n  // const [favList, setFavList] = useState([]);\n  // const addFav = (e) => {\n  //   setFavList((prevState) => {\n  //     const newShow = document.getElementById(e.target.id);\n  //     prevState.push(newShow.src);\n  //     // const res = [...new Set(prevState)];\n  //     const deduped = Array.from(new Set(prevState));\n  //     const favArray = deduped.map((data) => {\n  //       return data;\n  //     });\n  //     console.log(deduped);\n  //     return favArray;\n  //   });\n  // };\n  // // Code to remove shows from Favourite List\n  // // gets image's ID based on clicked image -> use splice to remove it from Favourite List\n  // const removeFav = (e) => {\n  //   setFavList((prevState) => {\n  //     const targetId = e.target.parentElement.id;\n  //     prevState.splice(targetId, 1);\n  //     const favArray = prevState.map((data) => {\n  //       return data;\n  //     });\n  //     return favArray;\n  //   });\n  // };\n  // ==================================================\n  // Display results in Cards with the following info:\n  // - Image\n  // - Name\n  // - Synopsis (within Accordian)\n  // - Link to watch\n  // ===================================================\n\n  let results = props.shows.map((show, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card border-dark mb-3 mx-2\",\n      style: {\n        width: \"19rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        className: \"cards\",\n        id: index,\n        src: show.image,\n        alt: show.name // onClick={addFav}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: show.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n          children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: \"0\",\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n              children: \"Synopsis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              className: \"summary\",\n              children: show.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: e => {\n              e.preventDefault();\n              window.open(show.officialSite);\n            },\n            children: \"Watch here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, uuidv4(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), results]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/ernest/Desktop/sei-personal/5. projects/project2/src/components/Results.js"],"names":["React","useState","v4","uuidv4","Favourites","Accordion","Card","Button","Results","props","favorites","JSON","parse","localStorage","getItem","forEach","favorite","document","getElementById","className","querySelector","addEventListener","e","id","target","item","index","indexOf","push","splice","setItem","stringify","results","shows","map","show","width","image","name","summary","preventDefault","window","open","officialSite"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Favourites from \"./Favourites\";\n\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\n// import ListGroupItem from \"react-bootstrap/ListGroupItem\";\n\nconst Results = (props) => {\n  // Favourite List\n\n  var favorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n  // add class 'fav' to each favorite\n  favorites.forEach(function (favorite) {\n    document.getElementById(favorite).className = \"fav\";\n  });\n  // register click event listener\n  document.querySelector(\".cards\").addEventListener(\"click\", function (e) {\n    var id = e.target.id,\n      item = e.target,\n      index = favorites.indexOf(id);\n    // return if target doesn't have an id (shouldn't happen)\n    if (!id) return;\n    // item is not favorite\n    if (index == -1) {\n      favorites.push(id);\n      item.className = \"fav\";\n      // item is already favorite\n    } else {\n      favorites.splice(index, 1);\n      item.className = \"\";\n    }\n    // store array in local storage\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  });\n\n  // Code to add shows to Favourite List\n  // changes to current state\n\n  // const [favList, setFavList] = useState([]);\n  // const addFav = (e) => {\n  //   setFavList((prevState) => {\n  //     const newShow = document.getElementById(e.target.id);\n  //     prevState.push(newShow.src);\n\n  //     // const res = [...new Set(prevState)];\n  //     const deduped = Array.from(new Set(prevState));\n\n  //     const favArray = deduped.map((data) => {\n  //       return data;\n  //     });\n  //     console.log(deduped);\n  //     return favArray;\n  //   });\n  // };\n\n  // // Code to remove shows from Favourite List\n  // // gets image's ID based on clicked image -> use splice to remove it from Favourite List\n  // const removeFav = (e) => {\n  //   setFavList((prevState) => {\n  //     const targetId = e.target.parentElement.id;\n  //     prevState.splice(targetId, 1);\n  //     const favArray = prevState.map((data) => {\n  //       return data;\n  //     });\n  //     return favArray;\n  //   });\n  // };\n\n  // ==================================================\n  // Display results in Cards with the following info:\n  // - Image\n  // - Name\n  // - Synopsis (within Accordian)\n  // - Link to watch\n  // ===================================================\n\n  let results = props.shows.map((show, index) => {\n    return (\n      <Card\n        className=\"card border-dark mb-3 mx-2\"\n        style={{ width: \"19rem\" }}\n        key={uuidv4()}\n      >\n        <Card.Img\n          variant=\"top\"\n          className=\"cards\"\n          id={index}\n          src={show.image}\n          alt={show.name}\n          // onClick={addFav}\n        />\n        <Card.Body>\n          <Card.Title>{show.name}</Card.Title>\n          <Accordion>\n            <Accordion.Item eventKey=\"0\">\n              <Accordion.Header>Synopsis</Accordion.Header>\n              <Accordion.Body className=\"summary\">\n                {show.summary}\n              </Accordion.Body>\n            </Accordion.Item>\n          </Accordion>\n        </Card.Body>\n\n        <Card.Footer className=\"footer\">\n          <>\n            <Button\n              variant=\"danger\"\n              onClick={(e) => {\n                e.preventDefault();\n                window.open(show.officialSite);\n              }}\n            >\n              Watch here\n            </Button>\n          </>\n        </Card.Footer>\n      </Card>\n    );\n  });\n\n  return (\n    <>\n      {/* <Favourites favList={favList} removeFav={removeFav} /> */}\n\n      <div className=\"row\">\n        <h2>Search Results</h2>\n        {results}\n      </div>\n    </>\n  );\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}