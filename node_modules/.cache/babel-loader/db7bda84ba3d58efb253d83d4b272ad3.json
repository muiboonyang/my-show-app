{"ast":null,"code":"var _jsxFileName = \"/Users/ernest/Desktop/sei-personal/5. projects/project2/src/components/SearchContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Search from \"./Search\";\nimport Results from \"./Results\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchContainer = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [shows, setShows] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); // ====================================\n  // Fetch shows from API based on query input\n  // ====================================\n\n  const url = \"https://api.tvmaze.com/search/shows?q=\";\n\n  const fetchShow = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url + query);\n      const rawData = await res.json();\n      console.log(rawData); // ===============================\n      // Extract name and medium image from fetch result\n      // - set a placeholder image for shows without pics (otherwise will show broken image link)\n      // - removes HTML element tags from show description\n      //\n      // a5 = 'Cat' && 'Dog'       // t && t returns \"Dog\"\n      // a2 = true && false;       // t && f returns false\n      // o5 = \"Cat\" || \"Dog\";      // t || t returns \"Cat\"\n      // o6 = false || \"Cat\";      // f || t returns \"Cat\"\n      // ===============================\n\n      const filteredData = rawData.map(result => {\n        const {\n          name,\n          image,\n          officialSite,\n          url,\n          summary,\n          summary2\n        } = result.show;\n        return {\n          name,\n          image: image && image.medium || \"https://i.imgur.com/V8olf7q.png\",\n          officialSite: officialSite || url,\n          summary: summary || \"Coming soon!\",\n          summary2: {\n            summary\n          }.replace(/<\\/?[^>]+>/gi, \"\")\n        };\n      });\n      setShows(filteredData);\n      console.log(shows);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  }; // ===========================\n  // 3 Functions to:\n  // - handleSearchInput: manage changes to input field\n  // - onSubmitQuery: initiate fetch request\n  // - onSearchAgain: set state back to default (and show page with the search bar)\n  // ===========================\n\n\n  const handleSearchInput = e => {\n    setQuery(e.target.value);\n  };\n\n  const onSubmitQuery = e => {\n    e.preventDefault();\n\n    if (query.length > 0) {\n      fetchShow();\n      setHasSearched(true); //   setQuery(\"\");\n    }\n  }; // ===========================\n  // Image, Error, or Loading check\n  // ===========================\n\n\n  let content = \"\";\n\n  if (shows) {\n    content = /*#__PURE__*/_jsxDEV(Results, {\n      shows: shows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  } // =========================\n  // Return\n  // - Using ternary operator + hasSearched state to display either component\n  // - hasSearched = false -> show page with Search bar / true -> show page with Results + \"back to search\" button)\n  // =========================\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchContainer\",\n    children: hasSearched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        handleSearchInput: handleSearchInput,\n        onSubmitQuery: onSubmitQuery,\n        query: query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), content]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchInput: handleSearchInput,\n        onSubmitQuery: onSubmitQuery,\n        query: query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchContainer, \"M1J7dZHlnIGRpJJ8+nICS5tOY5E=\");\n\n_c = SearchContainer;\nexport default SearchContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchContainer\");","map":{"version":3,"sources":["/Users/ernest/Desktop/sei-personal/5. projects/project2/src/components/SearchContainer.js"],"names":["React","useState","Search","Results","LoadingSpinner","SearchContainer","query","setQuery","shows","setShows","hasSearched","setHasSearched","isLoading","setIsLoading","error","setError","url","fetchShow","res","fetch","rawData","json","console","log","filteredData","map","result","name","image","officialSite","summary","summary2","show","medium","replace","err","message","handleSearchInput","e","target","value","onSubmitQuery","preventDefault","length","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Search from \"./Search\";\nimport Results from \"./Results\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst SearchContainer = () => {\n  const [query, setQuery] = useState(\"\");\n  const [shows, setShows] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // ====================================\n  // Fetch shows from API based on query input\n  // ====================================\n\n  const url = \"https://api.tvmaze.com/search/shows?q=\";\n\n  const fetchShow = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url + query);\n      const rawData = await res.json();\n      console.log(rawData);\n\n      // ===============================\n      // Extract name and medium image from fetch result\n      // - set a placeholder image for shows without pics (otherwise will show broken image link)\n      // - removes HTML element tags from show description\n      //\n      // a5 = 'Cat' && 'Dog'       // t && t returns \"Dog\"\n      // a2 = true && false;       // t && f returns false\n      // o5 = \"Cat\" || \"Dog\";      // t || t returns \"Cat\"\n      // o6 = false || \"Cat\";      // f || t returns \"Cat\"\n      // ===============================\n\n      const filteredData = rawData.map((result) => {\n        const { name, image, officialSite, url, summary, summary2 } =\n          result.show;\n        return {\n          name,\n          image: (image && image.medium) || \"https://i.imgur.com/V8olf7q.png\",\n          officialSite: officialSite || url,\n          summary: summary || \"Coming soon!\",\n          summary2: { summary }.replace(/<\\/?[^>]+>/gi, \"\"),\n        };\n      });\n\n      setShows(filteredData);\n      console.log(shows);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  // ===========================\n  // 3 Functions to:\n  // - handleSearchInput: manage changes to input field\n  // - onSubmitQuery: initiate fetch request\n  // - onSearchAgain: set state back to default (and show page with the search bar)\n  // ===========================\n\n  const handleSearchInput = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const onSubmitQuery = (e) => {\n    e.preventDefault();\n    if (query.length > 0) {\n      fetchShow();\n      setHasSearched(true);\n      //   setQuery(\"\");\n    }\n  };\n\n  // ===========================\n  // Image, Error, or Loading check\n  // ===========================\n\n  let content = \"\";\n\n  if (shows) {\n    content = <Results shows={shows} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  // =========================\n  // Return\n  // - Using ternary operator + hasSearched state to display either component\n  // - hasSearched = false -> show page with Search bar / true -> show page with Results + \"back to search\" button)\n  // =========================\n\n  return (\n    <div className=\"SearchContainer\">\n      {hasSearched ? (\n        <>\n          <Search\n            handleSearchInput={handleSearchInput}\n            onSubmitQuery={onSubmitQuery}\n            query={query}\n          />\n          <br />\n          {content}\n        </>\n      ) : (\n        <>\n          <Search\n            handleSearchInput={handleSearchInput}\n            onSubmitQuery={onSubmitQuery}\n            query={query}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SearchContainer;\n"]},"metadata":{},"sourceType":"module"}